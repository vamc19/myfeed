{"title": "The Old New Thing", "entries": [{"title": "The case of the invalid handle despite being managed by an RAII type", "url": "https://devblogs.microsoft.com/oldnewthing/20230615-00/?p=108342", "id": "https://devblogs.microsoft.com/oldnewthing/?p=108342", "updated_on": "2023-06-15T14:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "How expensive is it to create a Windows performance counter?", "url": "https://devblogs.microsoft.com/oldnewthing/20230614-00/?p=108338", "id": "https://devblogs.microsoft.com/oldnewthing/?p=108338", "updated_on": "2023-06-14T14:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "SIDs are really just another a fancy way of creating unique IDs in a decentralized way", "url": "https://devblogs.microsoft.com/oldnewthing/20230613-00/?p=108335", "id": "https://devblogs.microsoft.com/oldnewthing/?p=108335", "updated_on": "2023-06-13T14:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "The move constructor that you have to declare, even though you don\u2019t want anyone to actually call it", "url": "https://devblogs.microsoft.com/oldnewthing/20230612-00/?p=108329", "id": "https://devblogs.microsoft.com/oldnewthing/?p=108329", "updated_on": "2023-06-12T14:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "Reordering C++ template type parameters for usability purposes, and type deduction from the future", "url": "https://devblogs.microsoft.com/oldnewthing/20230609-00/?p=108318", "id": "https://devblogs.microsoft.com/oldnewthing/?p=108318", "updated_on": "2023-06-09T14:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "How can I register a program to auto-relaunch if it crashes or is terminated?, redux", "url": "https://devblogs.microsoft.com/oldnewthing/20230608-00/?p=108312", "id": "https://devblogs.microsoft.com/oldnewthing/?p=108312", "updated_on": "2023-06-08T14:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "Pulling sleight of hand tricks in a security vulnerability report, episode 2", "url": "https://devblogs.microsoft.com/oldnewthing/20230607-00/?p=108307", "id": "https://devblogs.microsoft.com/oldnewthing/?p=108307", "updated_on": "2023-06-07T14:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "How can I make WiFi passwords per-user rather than per-system?", "url": "https://devblogs.microsoft.com/oldnewthing/20230606-00/?p=108298", "id": "https://devblogs.microsoft.com/oldnewthing/?p=108298", "updated_on": "2023-06-06T14:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "It\u2019s great that you provide operator overloads, but it\u2019s also nice to have names", "url": "https://devblogs.microsoft.com/oldnewthing/20230605-00/?p=108289", "id": "https://devblogs.microsoft.com/oldnewthing/?p=108289", "updated_on": "2023-06-05T14:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "C++/WinRT event handlers that are lambdas with weak pointers to the parent class, part 3", "url": "https://devblogs.microsoft.com/oldnewthing/20230602-00/?p=108278", "id": "https://devblogs.microsoft.com/oldnewthing/?p=108278", "updated_on": "2023-06-02T14:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "C++/WinRT event handlers that are lambdas with weak pointers to the parent class, part 2", "url": "https://devblogs.microsoft.com/oldnewthing/20230601-00/?p=108272", "id": "https://devblogs.microsoft.com/oldnewthing/?p=108272", "updated_on": "2023-06-01T14:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "C++/WinRT event handlers that are lambdas with weak pointers to the parent class, part 1", "url": "https://devblogs.microsoft.com/oldnewthing/20230531-00/?p=108266", "id": "https://devblogs.microsoft.com/oldnewthing/?p=108266", "updated_on": "2023-05-31T14:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "How do I change the directory Windows uses for user profiles? revisited", "url": "https://devblogs.microsoft.com/oldnewthing/20230530-00/?p=108262", "id": "https://devblogs.microsoft.com/oldnewthing/?p=108262", "updated_on": "2023-05-30T14:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "On writing functions that accept any specialization of a C++ template type", "url": "https://devblogs.microsoft.com/oldnewthing/20230529-00/?p=108259", "id": "https://devblogs.microsoft.com/oldnewthing/?p=108259", "updated_on": "2023-05-29T14:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "Getting a strong reference from the this pointer too late", "url": "https://devblogs.microsoft.com/oldnewthing/20230526-00/?p=108252", "id": "https://devblogs.microsoft.com/oldnewthing/?p=108252", "updated_on": "2023-05-26T14:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}], "feed_etag": "W/\"3862e859ea7aa681fde1c8e8e2606cf4\"", "feed_last_modified": "Thu, 15 Jun 2023 14:05:46 GMT", "last_refresh": "2023-06-15T15:15:18.014355+00:00"}