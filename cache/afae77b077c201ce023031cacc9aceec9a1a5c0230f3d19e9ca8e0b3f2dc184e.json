{"title": "The Old New Thing", "entries": [{"title": "Inside STL: The pair and the compressed pair", "url": "https://devblogs.microsoft.com/oldnewthing/20230801-00/?p=108509", "id": "https://devblogs.microsoft.com/oldnewthing/?p=108509", "updated_on": "2023-08-01T14:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "Misinterpreting the misleadingly-named STATUS_STACK_BUFFER_OVERRUN", "url": "https://devblogs.microsoft.com/oldnewthing/20230731-00/?p=108505", "id": "https://devblogs.microsoft.com/oldnewthing/?p=108505", "updated_on": "2023-07-31T14:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "How to split off an older copy of a file while preserving git line history", "url": "https://devblogs.microsoft.com/oldnewthing/20230728-00/?p=108498", "id": "https://devblogs.microsoft.com/oldnewthing/?p=108498", "updated_on": "2023-07-28T14:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "Perfect forwarding forwards objects, not braced things that are trying to become objects", "url": "https://devblogs.microsoft.com/oldnewthing/20230727-00/?p=108494", "id": "https://devblogs.microsoft.com/oldnewthing/?p=108494", "updated_on": "2023-07-27T14:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "On the various ways of creating Windows Runtime delegates in C++/WinRT and C++/CX", "url": "https://devblogs.microsoft.com/oldnewthing/20230726-00/?p=108487", "id": "https://devblogs.microsoft.com/oldnewthing/?p=108487", "updated_on": "2023-07-26T14:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "Before you try to do something, make sure you can do nothing", "url": "https://devblogs.microsoft.com/oldnewthing/20230725-00/?p=108482", "id": "https://devblogs.microsoft.com/oldnewthing/?p=108482", "updated_on": "2023-07-25T14:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "Why does IAsyncAction or IAsyncOperation.GetResults() produce a E_ILLEGAL_METHOD_CALL exception?", "url": "https://devblogs.microsoft.com/oldnewthing/20230724-00/?p=108477", "id": "https://devblogs.microsoft.com/oldnewthing/?p=108477", "updated_on": "2023-07-24T14:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "How to clone a Windows Runtime map in the face of possible concurrent modification, part 3", "url": "https://devblogs.microsoft.com/oldnewthing/20230721-00/?p=108474", "id": "https://devblogs.microsoft.com/oldnewthing/?p=108474", "updated_on": "2023-07-21T14:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "How to clone a Windows Runtime map in the face of possible concurrent modification, part 2", "url": "https://devblogs.microsoft.com/oldnewthing/20230720-00/?p=108466", "id": "https://devblogs.microsoft.com/oldnewthing/?p=108466", "updated_on": "2023-07-20T14:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "How to clone a Windows Runtime map in the face of possible concurrent modification, part 1", "url": "https://devblogs.microsoft.com/oldnewthing/20230719-00/?p=108462", "id": "https://devblogs.microsoft.com/oldnewthing/?p=108462", "updated_on": "2023-07-19T14:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "How to clone a Windows Runtime vector in the face of possible concurrent modification, part 4", "url": "https://devblogs.microsoft.com/oldnewthing/20230718-00/?p=108458", "id": "https://devblogs.microsoft.com/oldnewthing/?p=108458", "updated_on": "2023-07-18T14:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "Cloning a Windows Runtime vector in the face of possible concurrent modification, denial of service?", "url": "https://devblogs.microsoft.com/oldnewthing/20230717-00/?p=108454", "id": "https://devblogs.microsoft.com/oldnewthing/?p=108454", "updated_on": "2023-07-17T14:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "How to clone a Windows Runtime vector in the face of possible concurrent modification, part 3", "url": "https://devblogs.microsoft.com/oldnewthing/20230714-00/?p=108448", "id": "https://devblogs.microsoft.com/oldnewthing/?p=108448", "updated_on": "2023-07-14T14:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "How to clone a Windows Runtime vector in the face of possible concurrent modification, part 2", "url": "https://devblogs.microsoft.com/oldnewthing/20230713-00/?p=108446", "id": "https://devblogs.microsoft.com/oldnewthing/?p=108446", "updated_on": "2023-07-13T14:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "How to clone a Windows Runtime vector in the face of possible concurrent modification, part 1", "url": "https://devblogs.microsoft.com/oldnewthing/20230712-00/?p=108412", "id": "https://devblogs.microsoft.com/oldnewthing/?p=108412", "updated_on": "2023-07-12T14:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}], "feed_etag": "W/\"01b383860610f92351ff2c25d59dfff7\"", "feed_last_modified": "Tue, 01 Aug 2023 14:23:48 GMT", "last_refresh": "2023-08-01T15:15:12.397089+00:00"}