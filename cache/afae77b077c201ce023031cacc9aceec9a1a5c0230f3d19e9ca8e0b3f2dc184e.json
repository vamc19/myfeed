{"title": "The Old New Thing", "entries": [{"title": "What happens if I define one environment variable in terms of the value of another environment variable?", "url": "https://devblogs.microsoft.com/oldnewthing/20231212-00/?p=109137", "id": "https://devblogs.microsoft.com/oldnewthing/?p=109137", "updated_on": "2023-12-12T15:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "The mysterious second parameter to the x86 ENTER instruction", "url": "https://devblogs.microsoft.com/oldnewthing/20231211-00/?p=109126", "id": "https://devblogs.microsoft.com/oldnewthing/?p=109126", "updated_on": "2023-12-11T15:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "A simpler version of the task sequencer that doesn\u2019t promise fairness", "url": "https://devblogs.microsoft.com/oldnewthing/20231208-00/?p=109121", "id": "https://devblogs.microsoft.com/oldnewthing/?p=109121", "updated_on": "2023-12-08T15:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "In C++, how can I make a default parameter be the this pointer of the caller?", "url": "https://devblogs.microsoft.com/oldnewthing/20231207-00/?p=109115", "id": "https://devblogs.microsoft.com/oldnewthing/?p=109115", "updated_on": "2023-12-07T15:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "In C++, how can I make a member function default parameter depend on this?", "url": "https://devblogs.microsoft.com/oldnewthing/20231206-00/?p=109108", "id": "https://devblogs.microsoft.com/oldnewthing/?p=109108", "updated_on": "2023-12-06T15:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "What was the code name for 64-bit Windows?", "url": "https://devblogs.microsoft.com/oldnewthing/20231205-00/?p=109103", "id": "https://devblogs.microsoft.com/oldnewthing/?p=109103", "updated_on": "2023-12-05T15:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "What is a static chain pointer in the context of calling convention ABI?", "url": "https://devblogs.microsoft.com/oldnewthing/20231204-00/?p=109095", "id": "https://devblogs.microsoft.com/oldnewthing/?p=109095", "updated_on": "2023-12-04T15:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "Why does the Windows Portable Executable (PE) format have both an import section and input directory?", "url": "https://devblogs.microsoft.com/oldnewthing/20231201-17/?p=109090", "id": "https://devblogs.microsoft.com/oldnewthing/?p=109090", "updated_on": "2023-12-01T19:07:17", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "Why does the Windows Portable Executable (PE) format have separate tables for import names and import addresses?, part 2", "url": "https://devblogs.microsoft.com/oldnewthing/20231130-00/?p=109084", "id": "https://devblogs.microsoft.com/oldnewthing/?p=109084", "updated_on": "2023-11-30T15:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "Why does the Windows Portable Executable (PE) format have separate tables for import names and import addresses?, part 1", "url": "https://devblogs.microsoft.com/oldnewthing/20231129-00/?p=109077", "id": "https://devblogs.microsoft.com/oldnewthing/?p=109077", "updated_on": "2023-11-29T15:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "A reported vulnerability about getting paid apps for free is really about paying for free apps", "url": "https://devblogs.microsoft.com/oldnewthing/20231128-00/?p=109072", "id": "https://devblogs.microsoft.com/oldnewthing/?p=109072", "updated_on": "2023-11-28T15:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "In Windows 3.1 and Windows 95, what is a \u201cgrabber\u201d?", "url": "https://devblogs.microsoft.com/oldnewthing/20231127-00/?p=109067", "id": "https://devblogs.microsoft.com/oldnewthing/?p=109067", "updated_on": "2023-11-27T15:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "On harmful overuse of std::move", "url": "https://devblogs.microsoft.com/oldnewthing/20231124-00/?p=109059", "id": "https://devblogs.microsoft.com/oldnewthing/?p=109059", "updated_on": "2023-11-24T15:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "On the need to keep most event sources alive if you want them to raise events", "url": "https://devblogs.microsoft.com/oldnewthing/20231123-00/?p=109056", "id": "https://devblogs.microsoft.com/oldnewthing/?p=109056", "updated_on": "2023-11-23T15:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}, {"title": "How can I convert a Windows Runtime Software\u00adBitmap to a WIC bitmap?", "url": "https://devblogs.microsoft.com/oldnewthing/20231122-00/?p=109052", "id": "https://devblogs.microsoft.com/oldnewthing/?p=109052", "updated_on": "2023-11-22T15:00:00", "subscription_id": "afae77b077c201ce023031cacc9aceec9a1a5c0230f3d19e9ca8e0b3f2dc184e", "subscription_title": "The Old New Thing"}], "feed_etag": "W/\"9553890ed355a03053a69f2a078a4bf7\"", "feed_last_modified": "Wed, 13 Dec 2023 13:46:50 GMT", "last_refresh": "2023-12-13T15:16:12.323560+00:00"}