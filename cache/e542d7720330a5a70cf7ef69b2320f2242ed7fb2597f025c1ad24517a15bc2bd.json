{"feed_status": {"code": 301, "url": "https://aws.amazon.com/blogs/database/feed/", "updated_on": "2021-10-11T14:34:17.545447+00:00"}, "title": "AWS Database Blog", "entries": [{"title": "Load RDF data into Amazon Neptune with AWS Glue", "url": "https://aws.amazon.com/blogs/database/load-rdf-data-into-amazon-neptune-with-aws-glue/", "id": "3082083ffa4ae974cc2098f4b2a2b7d81611873a", "updated_on": "2022-11-23T22:01:18", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "Optimize the storage costs of your workloads with Amazon DynamoDB Standard-IA table class", "url": "https://aws.amazon.com/blogs/database/optimize-the-storage-costs-of-your-workloads-with-amazon-dynamodb-standard-ia-table-class/", "id": "4a7b315050558f59fd597daca6e4882282428d23", "updated_on": "2022-11-23T19:37:30", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "Security best practices for Amazon RDS for MySQL and MariaDB instances", "url": "https://aws.amazon.com/blogs/database/security-best-practices-for-amazon-rds-for-mysql-and-mariadb-instances/", "id": "86c311a1ea2d4e23d5ed56af08bd6bd7855b6bb8", "updated_on": "2022-11-23T19:21:47", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "Introducing token-based access to Ethereum node APIs on Amazon Managed Blockchain", "url": "https://aws.amazon.com/blogs/database/introducing-token-based-access-to-ethereum-node-apis-on-amazon-managed-blockchain/", "id": "7492aba97efee9b6f58e1ea80c8cf324bc305c47", "updated_on": "2022-11-23T19:12:39", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "Increase write throughput on Amazon RDS for MariaDB using the MyRocks storage engine", "url": "https://aws.amazon.com/blogs/database/increase-write-throughput-on-amazon-rds-for-mariadb-using-the-myrocks-storage-engine/", "id": "04420d75de2e9ddd2eee7ff1dfdc726a1a8ea347", "updated_on": "2022-11-22T19:52:24", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "Federated query support between SQL Server and Amazon Aurora PostgreSQL", "url": "https://aws.amazon.com/blogs/database/federated-query-support-between-sql-server-and-amazon-aurora-postgresql/", "id": "aba0864c3cccaf53b5cf9fdb9499e019cb62cc47", "updated_on": "2022-11-22T14:19:07", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "Your guide to Amazon DynamoDB sessions at AWS re:Invent 2022", "url": "https://aws.amazon.com/blogs/database/your-guide-to-amazon-dynamodb-sessions-at-aws-reinvent-2022/", "id": "66b1b478b96658a008b860874af1957716b8f685", "updated_on": "2022-11-21T18:54:34", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "A serverless architecture for analyzing PostgreSQL logs with pgBadger", "url": "https://aws.amazon.com/blogs/database/a-serverless-architecture-for-analyzing-postgresql-logs-with-pgbadger/", "id": "33f75ca3d084bf9e14011239b38d655bd1043c8b", "updated_on": "2022-11-21T17:34:04", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "Back up an AWS DMS task using the AWS CLI and a JSON processor", "url": "https://aws.amazon.com/blogs/database/back-up-an-aws-dms-task-using-the-aws-cli-and-a-json-processor/", "id": "776e0944a7b3478686f0326bca9b0f4c35b2e4a3", "updated_on": "2022-11-18T13:14:11", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "Use vertical partitioning to scale data efficiently in Amazon DynamoDB", "url": "https://aws.amazon.com/blogs/database/use-vertical-partitioning-to-scale-data-efficiently-in-amazon-dynamodb/", "id": "3598f25bcc8e9d81c6bbaab98aa3769f58c27c7f", "updated_on": "2022-11-18T12:55:57", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "Generate an AWS SCT multiserver assessment report using the AWS SCT CLI", "url": "https://aws.amazon.com/blogs/database/generate-an-aws-sct-multiserver-assessment-report-using-the-aws-sct-cli/", "id": "6a11c8a83a3bfe5ece667bd928ec324279593ed0", "updated_on": "2022-11-18T12:38:12", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "Securely access Amazon DocumentDB (with MongoDB compatibility) locally using AWS Client VPN", "url": "https://aws.amazon.com/blogs/database/securely-access-amazon-documentdb-with-mongodb-compatibility-locally-using-aws-client-vpn/", "id": "692fc494476b1dcba4f1213712e8b958a4619656", "updated_on": "2022-11-17T18:41:24", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "Use cross-Region read replicas with Amazon Relational Database Service for SQL Server", "url": "https://aws.amazon.com/blogs/database/use-cross-region-read-replicas-with-amazon-relational-database-service-for-sql-server/", "id": "9e099fabc2375d1a341e704927ad347c2a347056", "updated_on": "2022-11-16T21:52:24", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "Create a heterogeneous linked server from Amazon RDS for SQL Server to an Oracle database", "url": "https://aws.amazon.com/blogs/database/create-a-heterogeneous-linked-server-from-amazon-rds-for-sql-server-to-an-oracle-database/", "id": "32cba0a11033fc729d74c1802e3134cc0aaaa169", "updated_on": "2022-11-15T21:47:21", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "Migrate Amazon Aurora and Amazon RDS to a new AWS Region", "url": "https://aws.amazon.com/blogs/database/migrate-amazon-aurora-and-amazon-rds-to-a-new-aws-region/", "id": "210f44fea699a875310c7898af2c1af63325e82c", "updated_on": "2022-11-14T15:18:14", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}], "feed_etag": null, "feed_last_modified": "Thu, 24 Nov 2022 14:14:47 GMT", "last_refresh": "2022-11-25T15:18:00.802676+00:00"}