{"feed_status": {"code": 301, "url": "https://aws.amazon.com/blogs/database/feed/", "updated_on": "2021-10-11T14:34:17.545447+00:00"}, "title": "AWS Database Blog", "entries": [{"title": "Leverage pgvector and Amazon Aurora PostgreSQL for Natural Language Processing, Chatbots and Sentiment Analysis", "url": "https://aws.amazon.com/blogs/database/leverage-pgvector-and-amazon-aurora-postgresql-for-natural-language-processing-chatbots-and-sentiment-analysis/", "id": "8d6d3e2401d2e10f41bc798aa3ee881387e70700", "updated_on": "2023-07-13T21:42:36", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "Receive SNS notifications about Amazon RDS for SQL Server when database state changes to Offline or Online", "url": "https://aws.amazon.com/blogs/database/receive-sns-notifications-about-amazon-rds-for-sql-server-when-database-state-changes-to-offline-or-online/", "id": "64fbb9e71733c7b667b9eaf3e32d3470f6e1987c", "updated_on": "2023-07-13T17:04:41", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "How to plan for a successful database modernization", "url": "https://aws.amazon.com/blogs/database/how-to-plan-for-a-successful-database-modernization/", "id": "04dbdf3efb05935113d8098678dc542de14f5391", "updated_on": "2023-07-12T21:17:28", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "Improve app performance through pipelining queries to Amazon RDS for PostgreSQL and Amazon Aurora PostgreSQL", "url": "https://aws.amazon.com/blogs/database/improve-app-performance-through-pipelining-queries-to-amazon-rds-for-postgresql-and-amazon-aurora-postgresql/", "id": "477c8e36c96701f2629cdafe4c5e7225b219c4c7", "updated_on": "2023-07-12T16:56:00", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "Migrate a multi-TB SQL Server database to Amazon RDS Custom for SQL Server using Amazon S3 and Amazon EBS", "url": "https://aws.amazon.com/blogs/database/migrate-a-multi-tb-sql-server-database-to-amazon-rds-custom-for-sql-server-using-amazon-s3-and-amazon-ebs/", "id": "d0b2bca2e2f39dd08903d73878300e1538d88a61", "updated_on": "2023-07-11T15:39:04", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "Cross-account Amazon Aurora PostgreSQL and Amazon RDS for PostgreSQL migration with reduced downtime using AWS DMS", "url": "https://aws.amazon.com/blogs/database/cross-account-amazon-aurora-postgresql-and-amazon-rds-for-postgresql-migration-with-reduced-downtime-using-aws-dms/", "id": "38bfd572a4f60fe4e1f4c9686d3834bfbce572bc", "updated_on": "2023-07-10T18:39:29", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "Migrate PostgreSQL from Google Cloud Platform to Amazon RDS with minimal downtime", "url": "https://aws.amazon.com/blogs/database/migrate-postgresql-from-google-cloud-platform-to-amazon-rds-with-minimal-downtime/", "id": "f368c811091a58baf1fccb048864a3e074f1ff38", "updated_on": "2023-07-10T18:08:39", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "Empowering the role of the cloud database engineer", "url": "https://aws.amazon.com/blogs/database/empowering-the-role-of-the-cloud-database-engineer/", "id": "5b6835e80b34ad56984708020d49d9717b64cb9e", "updated_on": "2023-07-07T17:50:30", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "Stream data from Amazon DocumentDB to Amazon Kinesis Data Firehose using AWS Lambda", "url": "https://aws.amazon.com/blogs/database/stream-data-from-amazon-documentdb-to-amazon-kinesis-data-firehose-using-aws-lambda/", "id": "85f2ceadc5fda47b873f5856203d4ec0d4d5f5eb", "updated_on": "2023-07-07T16:41:09", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "Implement Oracle GoldenGate bidirectional replication between Amazon RDS for Oracle databases", "url": "https://aws.amazon.com/blogs/database/implement-oracle-goldengate-bidirectional-replication-between-amazon-rds-for-oracle-databases/", "id": "99e31aa523d4d9a2399289fff505f0a3e3280d52", "updated_on": "2023-07-06T19:33:48", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "Handle conditional write errors in high concurrency scenarios with Amazon DynamoDB", "url": "https://aws.amazon.com/blogs/database/handle-conditional-write-errors-in-high-concurrency-scenarios-with-amazon-dynamodb/", "id": "7e2449973a41bce3c49307ac96a6ad17473241b6", "updated_on": "2023-07-06T18:57:03", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "Migrate from a Microsoft SQL Server AlwaysOn read-only replica to Amazon Aurora PostgreSQL with AWS DMS", "url": "https://aws.amazon.com/blogs/database/migrate-from-a-microsoft-sql-server-alwayson-read-only-replica-to-amazon-aurora-postgresql-with-aws-dms/", "id": "41a6b3675ea4ed89e320f1b5cf308c6bc93fd39d", "updated_on": "2023-07-05T20:40:07", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "Working with accent-insensitive collations with Babelfish for Aurora PostgreSQL", "url": "https://aws.amazon.com/blogs/database/working-with-accent-insensitive-collations-with-babelfish-for-aurora-postgresql/", "id": "780451106865210b629d6901a7e5324a414efa23", "updated_on": "2023-06-30T18:36:22", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "Migrate on-premises SQL Server workloads to Amazon RDS Custom for SQL Server using distributed availability groups", "url": "https://aws.amazon.com/blogs/database/migrate-on-premises-sql-server-workloads-to-amazon-rds-custom-for-sql-server-using-distributed-availability-groups/", "id": "aad8d38249c55538725aa274066d2029a0125c89", "updated_on": "2023-06-28T22:17:50", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "Use cases and best practices to optimize cost and performance with Amazon Neptune Serverless", "url": "https://aws.amazon.com/blogs/database/use-cases-and-best-practices-to-optimize-cost-and-performance-with-amazon-neptune-serverless/", "id": "966be205c363743b041569139896ecd7f32e25ef", "updated_on": "2023-06-28T17:03:01", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}], "feed_etag": null, "feed_last_modified": "Fri, 14 Jul 2023 20:57:51 GMT", "last_refresh": "2023-07-16T15:15:41.635586+00:00"}