{"feed_status": {"code": 301, "url": "https://aws.amazon.com/blogs/database/feed/", "updated_on": "2021-10-11T14:34:17.545447+00:00"}, "title": "AWS Database Blog", "entries": [{"title": "Migrate an internet-scale online transactional system to Amazon DynamoDB using AWS DMS", "url": "https://aws.amazon.com/blogs/database/migrate-an-internet-scale-online-transactional-system-to-amazon-dynamodb-using-aws-dms/", "id": "4bd950bbd4b702691c68b9bf52840e126621dae4", "updated_on": "2023-03-16T19:17:09", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "RWE Supply & Trading modernizes their IT landscape on AWS using Amazon Database Migration Accelerator", "url": "https://aws.amazon.com/blogs/database/rwe-supply-trading-modernizes-their-it-landscape-on-aws-using-amazon-database-migration-accelerator/", "id": "0d495744cf806d3b14def2eaed215e91259ff789", "updated_on": "2023-03-15T19:08:12", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "How Skai performed database modernization and migration with AWS DMS", "url": "https://aws.amazon.com/blogs/database/how-skai-performed-database-and-migration-with-aws-dms/", "id": "f294948c10a1955a8a89fa1e0bc18bbbc85c0de5", "updated_on": "2023-03-14T19:08:57", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "Introducing Client-Side Field Level Encryption and MongoDB 5.0 API compatibility in Amazon DocumentDB", "url": "https://aws.amazon.com/blogs/database/introducing-client-side-field-level-encryption-and-mongodb-5-0-api-compatibility-in-amazon-documentdb/", "id": "76d940237fe07347d5b21290118f7117559ba57a", "updated_on": "2023-03-13T22:15:13", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "Client-side T-SQL assessment for SQL Server to Babelfish for Aurora PostgreSQL migration", "url": "https://aws.amazon.com/blogs/database/client-side-t-sql-assessment-for-sql-server-to-babelfish-for-aurora-postgresql-migration/", "id": "1c6895a79b285202843c84b95198624626ae0fe8", "updated_on": "2023-03-13T19:55:39", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "Automate Avalanche node deployment using the AWS CDK: Part 1", "url": "https://aws.amazon.com/blogs/database/part-1-automate-avalanche-node-deployment-using-the-aws-cdk/", "id": "7265bb6252395f6e5d63563cab65240f740fe957", "updated_on": "2023-03-09T20:50:18", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "How to use deletion protection to enhance your Amazon DynamoDB table protection strategy", "url": "https://aws.amazon.com/blogs/database/how-to-use-deletion-protection-to-enhance-your-amazon-dynamodb-table-protection-strategy/", "id": "6b54d1720fd04ea8eadd7b62bc0626411fe7ef78", "updated_on": "2023-03-08T22:44:29", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "Exploring new features of Apache TinkerPop 3.6.x in Amazon Neptune", "url": "https://aws.amazon.com/blogs/database/exploring-new-features-of-apache-tinkerpop-3-6-x-in-amazon-neptune/", "id": "863f74adfe19eab5adbb796097c867d814e8bdbc", "updated_on": "2023-03-08T21:36:53", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "Key considerations for migration estimation from Amazon Database Migration Accelerator", "url": "https://aws.amazon.com/blogs/database/key-considerations-for-migration-estimation-from-amazon-database-migration-accelerator/", "id": "cb4ba252be638c669371c03eda4acaace65e37b2", "updated_on": "2023-03-08T18:55:08", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "Monitor Amazon RDS for PostgreSQL and Amazon Aurora PostgreSQL performance using PGSnapper", "url": "https://aws.amazon.com/blogs/database/monitor-amazon-rds-for-postgresql-and-amazon-aurora-postgresql-performance-using-pgsnapper/", "id": "644de1250081e1df651cd7539509a10288838056", "updated_on": "2023-03-08T18:43:56", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "Evaluate Amazon Aurora Serverless v2 for your provisioned Aurora clusters", "url": "https://aws.amazon.com/blogs/database/evaluate-amazon-aurora-serverless-v2-for-your-provisioned-aurora-clusters/", "id": "fa00b37cf4b3a101e9f224a7b24326e3cb1e0510", "updated_on": "2023-03-07T17:18:55", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "Choose the right PostgreSQL data access pattern for your SaaS application", "url": "https://aws.amazon.com/blogs/database/choose-the-right-postgresql-data-access-pattern-for-your-saas-application/", "id": "b800d6686b6296da41c852970799ffb4751aeb0c", "updated_on": "2023-03-06T18:06:55", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "Calculate Amazon DynamoDB reserved capacity recommendations to optimize costs", "url": "https://aws.amazon.com/blogs/database/calculate-amazon-dynamodb-reserved-capacity-recommendations-to-optimize-costs/", "id": "56016f84db291632a9295c3fe203806cdc756198", "updated_on": "2023-03-06T17:58:17", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "Deploy an Amazon RDS for PostgreSQL and MySQL Multi-AZ DB cluster using Terraform modules", "url": "https://aws.amazon.com/blogs/database/deploy-an-amazon-rds-for-postgresql-and-mysql-multi-az-db-cluster-using-terraform-modules/", "id": "9c0163c4319acab38b836aee9784988d8b6d499b", "updated_on": "2023-03-03T15:56:08", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}, {"title": "Read Scalability with Amazon Aurora Serverless v2", "url": "https://aws.amazon.com/blogs/database/read-scalability-with-amazon-aurora-serverless-v2/", "id": "b71b38e5e37db7ff729a80be9d79c6161977a0ee", "updated_on": "2023-03-02T18:37:56", "subscription_id": "e542d7720330a5a70cf7ef69b2320f2242ed7fb2597f025c1ad24517a15bc2bd", "subscription_title": "AWS Database Blog"}], "feed_etag": null, "feed_last_modified": "Fri, 17 Mar 2023 21:55:39 GMT", "last_refresh": "2023-03-18T15:15:23.381648+00:00"}